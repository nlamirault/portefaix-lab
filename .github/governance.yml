# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: v1

issue:
  labels:
    # - prefix: needs
    #   list: [ "kind", "priority", "triage" ]
    #   multiple: false
    #   author_association:
    #     collaborator: true
    #     member: true
    #     owner: true
    #   needs:
    #     comment: |
    #       @$AUTHOR: This issue is currently awaiting triage.

    #       The triage/accepted label can be added by org members by writing /triage accepted in a comment.

    - prefix: kind
      list: [ "feature", "discussion", "documentation", "question", "bug", "support", "cleanup", "deprecation" ]
      multiple: false
      needs:
        comment: |
          @$AUTHOR: There are no `kind` label on this PR.
          You need a 'kind' label to generate the release note automatically.

    - prefix: area
      list: [ "kubernetes", "terraform", "inspec", "renovate", "ansible", "github" ]
      multiple: false
      needs:
        comment: |
          @$AUTHOR: There are no `area` labels on this issue.
          Adding an appropriate label will greatly expedite the process for us.
          You can add as many area as you see fit. **If you are unsure what to do you can ignore this!**

    - prefix: cloud
      list: [ "aws", "azure", "gcp", "scaleway", "exoscale", "homelab" ]
      multiple: false
      needs:
        comment: |
          @$AUTHOR: There are no `cloud` labels on this issue.
          Adding an appropriate label will greatly expedite the process for us.
          You can add as many area as you see fit. **If you are unsure what to do you can ignore this!**

    - prefix: priority
      list: [ "critical", "high", "medium", "low", "backog" ]
      multiple: false
      # author_association:
      #   collaborator: true
      #   member: true
      #   owner: true
      needs:
        comment: |
          @$AUTHOR: There are no `priority` labels on this issue.
          Adding an appropriate label will greatly expedite the process for us.
          You can add as many area as you see fit. **If you are unsure what to do you can ignore this!**

  # chat_ops:
  #   - cmd: /close
  #     type: close
  #     author_association:
  #       author: true
  #       collaborator: true
  #       member: true
  #       owner: true

  #   - cmd: /cc
  #     type: none

  #   - cmd: /assign
  #     type: assign
  #     author_association:
  #       collaborator: true
  #       member: true
  #       owner: true

  #   - cmd: /comment issue
  #     type: comment
  #     comment: |
  #       @$ISSUE_AUTHOR: Hey this is comment issue example for issue/pr author.
  #       @$AUTHOR: Hey this is comment issue example for sender author.

  #   - cmd: /kind me
  #     type: label
  #     label:
  #       add: kind/me
  #       remove: [ 'label/remove', 'label/that' ]

pull_request:
  labels:
    - prefix: kind
      list: [ "feature", "discussion", "documentation", "question", "bug", "support", "cleanup", "deprecation" ]
      multiple: false
      needs:
        comment: |
          @$AUTHOR: There are no `kind` label on this PR.
          You need a 'kind' label to generate the release note automatically.
        status:
          context: "Kind Label"
          description:
            success: Ready for review & merge.
            failure: Missing kind label to generate release automatically.

    - prefix: area
      list: [ "kubernetes", "terraform", "inspec", "renovate", "ansible", "github" ]
      multiple: false
      needs:
        comment: |
          @$AUTHOR: There are no `area` labels on this issue.
          Adding an appropriate label will greatly expedite the process for us.
          You can add as many area as you see fit. **If you are unsure what to do you can ignore this!**
        status:
          context: "Area Label"
          description:
            success: Ready for review & merge.
            failure: Missing area label to generate release automatically.

    - prefix: cloud
      list: [ "aws", "azure", "gcp", "scaleway", "exoscale", "homelab" ]
      multiple: false
      needs:
        comment: |
          @$AUTHOR: There are no `cloud` labels on this issue.
          Adding an appropriate label will greatly expedite the process for us.
          You can add as many area as you see fit. **If you are unsure what to do you can ignore this!**
        status:
          context: "Cloud Label"
          description:
            success: Ready for review & merge.
            failure: Missing cloud label to generate release automatically.

    - prefix: priority
      list: [ "critical", "high", "medium", "low", "backog" ]
      multiple: false
      # author_association:
      #   collaborator: true
      #   member: true
      #   owner: true
      needs:
        comment: |
          @$AUTHOR: There are no `priority` labels on this issue.
          Adding an appropriate label will greatly expedite the process for us.
          You can add as many area as you see fit. **If you are unsure what to do you can ignore this!**
        status:
          context: "Priority Label"
          description:
            success: Ready for review & merge.
            failure: Missing priority label to generate release automatically.


  # chat_ops:
  #   - cmd: /close
  #     type: close
  #     author_association:
  #       author: true
  #       collaborator: true
  #       member: true
  #       owner: true

  #   - cmd: /cc
  #     type: none # does not trigger anything

  #   - cmd: /request
  #     type: review
  #     author_association:
  #       collaborator: true
  #       member: true
  #       owner: true

  #   - cmd: /comment pr
  #     type: comment
  #     comment: |
  #       @$AUTHOR: Hey this is comment pr example.
