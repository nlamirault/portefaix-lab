# Copyright (C) 2020 Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: AWS / Terraform deploy

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'staging'
      tf_version:
        description: "Terraform version"
        required: true
        default: '0.13.5'

jobs:
  aws_elastic_ip_internet_gateway:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy Portefaix on AWS / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      env:
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}"
        AWS_DEFAULT_REGION: "${{ secrets.AWS_DEFAULT_REGION_STAGING }}"
        AWS_REGION: "${{ secrets.AWS_REGION_STAGING }}"

    # - name: Terraform Format
    #   id: fmt
    #   run: terraform fmt -check
    #   working-directory: iac/aws/elastic-ips/internet-gateway/terraform

    - name: Terraform Init
      id: init
      run: terraform init -reconfigure -backend-config=backend-vars/${{ github.event.inputs.env }}.tfvars
      working-directory: iac/aws/elastic-ips/internet-gateway/terraform

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -var-file=tfvars/${{ github.event.inputs.env }}.tfvars
      working-directory: iac/aws/elastic-ips/internet-gateway/terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve -var-file=tfvars/${{ github.event.inputs.env }}.tfvars
      working-directory: iac/aws/elastic-ips/internet-gateway/terraform
      