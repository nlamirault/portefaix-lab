# Copyright (C) 2020-2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

alertmanager:
  serviceAccount:
    create: true
    name: alertmanager
    annotations:
      iam.gke.io/gcp-service-account: portefaix-prod-alertmanager@portefaix-prod.iam.gserviceaccount.com
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: 'letsencrypt-prod'
      # Pomerium
      nginx.ingress.kubernetes.io/auth-url: https://forwardauth.gcp.portefaix.xyz/verify?uri=$scheme://$host$request_uri
      nginx.ingress.kubernetes.io/auth-signin: "https://forwardauth.gcp.portefaix.xyz/?uri=$scheme://$host$request_uri"
      # Vouch
      # nginx.ingress.kubernetes.io/auth-signin: "https://vouch.gcp.portefaix.xyz/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
      # nginx.ingress.kubernetes.io/auth-url: https://vouch.gcp.portefaix.xyz/validate
      # nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
      # nginx.ingress.kubernetes.io/auth-snippet: |
      #   # these return values are used by the @error401 call
      #   auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
      #   auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
      #   auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    hosts:
      - alertmanager.gcp.portefaix.xyz
    path: /
    tls:
      - secretName: alertmanager.gcp.portefaix.xyz-tls
        hosts:
          - alertmanager.gcp.portefaix.xyz
  alertmanagerSpec:
    externalUrl: https://alertmanager.gcp.portefaix.xyz

grafana:
  serviceAccount:
    create: true
    name: grafana
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      # Pomerium
      nginx.ingress.kubernetes.io/auth-url: https://forwardauth.gcp.portefaix.xyz/verify?uri=$scheme://$host$request_uri
      nginx.ingress.kubernetes.io/auth-signin: "https://forwardauth.gcp.portefaix.xyz/?uri=$scheme://$host$request_uri"
      # nginx.ingress.kubernetes.io/auth-url: "https://pomerium-proxy.identity.svc.cluster.local/verify?uri=$scheme://$host$request_uri"
      # nginx.ingress.kubernetes.io/auth-signin: "https://pomerium-proxy.identity.svc.cluster.local/?uri=$scheme://$host$request_uri"
      # Vouch
      # nginx.ingress.kubernetes.io/auth-signin: "https://vouch.gcp.portefaix.xyz/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
      # nginx.ingress.kubernetes.io/auth-url: https://vouch.gcp.portefaix.xyz/validate
      # nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
      # nginx.ingress.kubernetes.io/auth-snippet: |
      #   # these return values are used by the @error401 call
      #   auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
      #   auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
      #   auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    hosts:
      - grafana.gcp.portefaix.xyz
    path: /
    tls:
      - secretName: grafana.gcp.portefaix.xyz-tls
        hosts:
          - grafana.gcp.portefaix.xyz

prometheus:
  serviceAccount:
    create: true
    name: prometheus
    annotations:
      iam.gke.io/gcp-service-account: portefaix-prod-prometheus@portefaix-prod.iam.gserviceaccount.com
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # Pomerium
      nginx.ingress.kubernetes.io/auth-url: https://forwardauth.gcp.portefaix.xyz/verify?uri=$scheme://$host$request_uri
      nginx.ingress.kubernetes.io/auth-signin: "https://forwardauth.gcp.portefaix.xyz/?uri=$scheme://$host$request_uri"
      # nginx.ingress.kubernetes.io/auth-url: "https://pomerium-proxy.identity.svc.cluster.local/verify?uri=$scheme://$host$request_uri"
      # nginx.ingress.kubernetes.io/auth-signin: "https://pomerium-proxy.identity.svc.cluster.local/?uri=$scheme://$host$request_uri"
      # Vouch
      # nginx.ingress.kubernetes.io/auth-signin: "https://vouch.gcp.portefaix.xyz/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
      # nginx.ingress.kubernetes.io/auth-url: https://vouch.gcp.portefaix.xyz/validate
      # nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
      # nginx.ingress.kubernetes.io/auth-snippet: |
      #   # these return values are used by the @error401 call
      #   auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
      #   auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
      #   auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    hosts:
      - prometheus.gcp.portefaix.xyz
    path: /
    tls:
      - secretName: prometheus.gcp.portefaix.xyz-tls
        hosts:
          - prometheus.gcp.portefaix.xyz
  prometheusSpec:
    externalUrl: https://prometheus.gcp.portefaix.xyz
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: "standard"
          resources:
            requests:
              storage: 10Gi
