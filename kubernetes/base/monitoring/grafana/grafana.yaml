# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.12.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  releaseName: grafana
  targetNamespace: monitoring
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 1m
    cleanupOnFail: true
  timeout: 20m
  values:

    extraLabels:
      portefaix.xyz/version: v0.14.0

    # image:
    #   repository: grafana/grafana
    #   tag: 7.3.1
    ingress:
      enabled: false

    sidecar:
      dashboards:
        enabled: true
        label: grafana/dashboard
        searchNamespace: ALL
        folderAnnotation: grafana/folder
        provider:
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        label: grafana/datasource
        searchNamespace: ALL
        # Disabled due to thanos being set as the new default datasource instead of prometheus
        defaultDatasourceEnabled: false
      notifiers:
        enabled: false
        label: grafana/notifier
        searchNamespace: ALL

    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack

    # Administrator credentials when not using an existing secret (see below)
    adminUser: admin
    adminPassword: portefaix

    grafana.ini:
      auth.basic:
        disable_login_form: false

    plugins:
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      # - natel-discrete-panel
      # - pr0ps-trackmap-panel
      # - vonage-status-panel
      # - btplc-status-dot-panel

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: 'flux'
            orgId: 1
            folder: 'flux'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: 'compute'
            orgId: 1
            folder: 'compute'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/compute
          - name: 'kubernetes'
            orgId: 1
            folder: 'kubernetes'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: 'monitoring'
            orgId: 1
            folder: 'monitoring'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/monitoring
          - name: 'logging'
            orgId: 1
            folder: 'logging'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/logging
          - name: 'tracing'
            orgId: 1
            folder: 'tracing'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/tracing
          - name: 'security'
            orgId: 1
            folder: 'security'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/security
          - name: 'storage'
            orgId: 1
            folder: 'storage'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage
          - name: 'networking'
            orgId: 1
            folder: 'networking'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/networking
          - name: 'mesh'
            orgId: 1
            folder: 'mesh'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/mesh
    additionalDataSources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/
        isDefault: false
      - name: Thanos
        type: prometheus
        access: proxy
        url: http://thanos-query.monitoring.svc.cluster.local:10902/
        isDefault: false
      - name: loki
        type: loki
        access: proxy
        url: http://loki.logging.svc.cluster.local:3100


    dashboards:
      default:

        # ================
        # Cert-Manager mixin
        cert-manager:
          url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json
          datasource: Prometheus

      flux:
        # ================
        # Flux V2
        toolkit-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.15.1/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        toolkit-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.15.1/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus

      compute:
        # ================
        # Compute / Node Exporter
        node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus

      kubernetes:
        # ================
        # Kubernetes / Ingress Controller
        nginx-dashboard:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-perf:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        # ================
        # Kubernetes / Kubernetes Mixin
        # apiserver:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/apiserver.json
        #   datasource: Prometheus
        # cluster-total:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/cluster-total.json
        #   datasource: Prometheus
        # controller-manager:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/controller-manager.json
        #   datasource: Prometheus
        # k8s-resources-cluster:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/k8s-resources-cluster.json
        #   datasource: Prometheus
        # k8s-resources-namespace:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/k8s-resources-namespace.json
        #   datasource: Prometheus
        # k8s-resources-node:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/k8s-resources-node.json
        #   datasource: Prometheus
        # k8s-resources-pod:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/k8s-resources-pod.json
        #   datasource: Prometheus
        # k8s-resources-workload:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/k8s-resources-workload.json
        #   datasource: Prometheus
        # k8s-resources-workloads-namespace:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/k8s-resources-workloads-namespace.json
        #   datasource: Prometheus
        # kubelet:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/kubelet.json
        #   datasource: Prometheus
        # namespace-by-pod:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/namespace-by-pod.json
        #   datasource: Prometheus
        # namespace-by-workload:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/namespace-by-workload.json
        #   datasource: Prometheus
        # persistentvolumeusage:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/persistentvolumesusage.json
        #   datasource: Prometheus
        # pod-total:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/pod-total.json
        #   datasource: Prometheus
        # proxy:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/proxy.json
        #   datasource: Prometheus
        # scheduler:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/scheduler.json
        #   datasource: Prometheus
        # statefulset:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/statefulset.json
        #   datasource: Prometheus
        # workload-total:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/kubernetes/dashboards/workload-total.json
        #   datasource: Prometheus
        # ================
        # CoreDNS mixin

      # monitoring:
        # ================
        # Monitoring / Thanos Mixin
        # thanos-overview:
        #   url: https://raw.githubusercontent.com/thanos-io/thanos/v0.16.0/examples/dashboards/overview.json
        #   datasource: Prometheus
        # thanos-compact:
        #   url: https://raw.githubusercontent.com/thanos-io/thanos/v0.16.0/examples/dashboards/compact.json
        #   datasource: Prometheus
        # thanos-querier:
        #   url: https://raw.githubusercontent.com/thanos-io/thanos/v0.16.0/examples/dashboards/query.json
        #   datasource: Prometheus
        # thanos-store:
        #   url: https://raw.githubusercontent.com/thanos-io/thanos/v0.16.0/examples/dashboards/store.json
        #   datasource: Prometheus
        # thanos-receiver:
        #   url: https://raw.githubusercontent.com/thanos-io/thanos/v0.16.0/examples/dashboards/receive.json
        #   datasource: Prometheus
        # thanos-sidecar:
        #   url: https://raw.githubusercontent.com/thanos-io/thanos/v0.16.0/examples/dashboards/sidecar.json
        #   datasource: Prometheus
        # thanos-ruler:
        #   url: https://raw.githubusercontent.com/thanos-io/thanos/v0.16.0/examples/dashboards/rule.json
        #   datasource: Prometheus
        # thanos-replicate:
        #   url: https://raw.githubusercontent.com/thanos-io/thanos/v0.16.0/examples/dashboards/bucket_replicate.json
        #   datasource: Prometheus

      logging:
        # ================
        # Logging / Fluent-Bit
        fluent-bit-overview:
          url: https://raw.githubusercontent.com/fluent/fluent-bit-docs/1.6/monitoring/dashboard.json
          datasource: Prometheus
        # ================
        # Logging / Loki
        loki-dashboard-errors:
          url: https://grafana.com/api/dashboards/12611/revisions/1/download
          datasource: Prometheus
        loki-global:
          url: https://grafana.com/api/dashboards/13407/revisions/1/download
          datasource: Prometheus

      # mesh:
        # ================
        # Mesh / Open Service Mesh
        # osm-control-plane:
        #   url: https://raw.githubusercontent.com/openservicemesh/osm/v0.5.0/charts/osm/grafana/dashboards/osm-control-plane.json
        #   datasource: Prometheus
        # osm-mesh-envoy-details:
        #   url: https://raw.githubusercontent.com/openservicemesh/osm/v0.5.0/charts/osm/grafana/dashboards/osm-mesh-envoy-details.json
        #   datasource: Prometheus
        # osm-pod:
        #   url: https://raw.githubusercontent.com/openservicemesh/osm/v0.5.0/charts/osm/grafana/dashboards/osm-pod.json
        #   datasource: Prometheus
        # osm-service-to-service:
        #   url: https://raw.githubusercontent.com/openservicemesh/osm/v0.5.0/charts/osm/grafana/dashboards/osm-service-to-service.json
        #   datasource: Prometheus
        # osm-workload:
        #   url: https://raw.githubusercontent.com/openservicemesh/osm/v0.5.0/charts/osm/grafana/dashboards/osm-workload.json
        #   datasource: Prometheus
        # ================
        # Mesh / Linkerd
        # authority:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/authority.json
        #   datasource: Prometheus
        # cronjob:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/cronjob.json
        #   datasource: Prometheus
        # daemonset:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/daemonset.json
        #   datasource: Prometheus
        # deployment:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/deployment.json
        #   datasource: Prometheus
        # health:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/health.json
        #   datasource: Prometheus
        # job:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/job.json
        #   datasource: Prometheus
        # # multicluster:
        # #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/multicluster.json
        # #   datasource: Prometheus
        # namespace:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/namespace.json
        #   datasource: Prometheus
        # pod:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/pod.json
        #   datasource: Prometheus
        # replicaset:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/replicaset.json
        #   datasource: Prometheus
        # replicationcontroller:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/replicationcontroller.json
        #   datasource: Prometheus
        # route:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/route.json
        #   datasource: Prometheus
        # service:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/service.json
        #   datasource: Prometheus
        # statefulset:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/statefulset.json
        #   datasource: Prometheus
        # top-line:
        #   url: https://raw.githubusercontent.com/linkerd/linkerd2/edge-21.6.1/grafana/dashboards/top-line.json
        #   datasource: Prometheus

      security:
        # ================
        # Security / Falco
        falco-dashboard:
          url: https://raw.githubusercontent.com/falcosecurity/falco-exporter/v0.4.1/grafana/dashboard.json
          datasource: Prometheus

      storage:
        # ================
        # Storage / Ceph
        # ceph-cluster:
        #   url: https://grafana.com/api/dashboards/2842/revisions/11/download
        #   datasource: Prometheus
        # ceph-osd:
        #   url: https://grafana.com/api/dashboards/5336/revisions/3/download
        #   datasource: Prometheus
        # ceph-pools:
        #   url: https://grafana.com/api/dashboards/5342/revisions/3/download
        #   datasource: Prometheus

        # ================
        # Storage / OpenEBS
        # openebs:
        #   url: https://grafana.com/api/dashboards/12171/revisions/1/download
        #   datasource: Prometheus
        # openebs-pg-dashboard:
        #   url: https://raw.githubusercontent.com/openebs/openebs/master/k8s/openebs-pg-dashboard.json
        #   datasource: Prometheus

        # ================
        # Storage / Velero
        velero:
          url: https://grafana.com/api/dashboards/11055/revisions/2/download
          datasource: Prometheus
