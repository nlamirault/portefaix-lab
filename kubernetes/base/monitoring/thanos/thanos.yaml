---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://kubernetes-charts.banzaicloud.com
      chart: thanos
      version: 0.4.2
      sourceRef:
        kind: HelmRepository
        name: banzaicloud-charts
        namespace: flux-system
  releaseName: thanos
  targetNamespace: monitoring
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 1m
    cleanupOnFail: true
  timeout: 10m
  values:

    image:
    #   repository: quay.io/thanos/thanos
    #   tag: v0.16.0
    objstoreSecretOverride: thanos-objstore-config

    store:
      enabled: true
      dataVolume:
        backend:
          persistentVolumeClaim:
            claimName: thanos-store-data-volume
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            release: kube-prometheus-stack
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 30m
          memory: 400Mi
      serviceAccount: thanos

    query:
      enabled: true
      stores:
      #  - "dnssrv+_grpc._tcp.<service>.<namespace>.svc.cluster.local"
      - "dnssrv+_grpc._tcp.kube-prometheus-stack-prometheus.monitoring.svc.cluster.local"
      http:
        ingress:
          enabled: false
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            release: kube-prometheus-stack
      resources:
        limits:
          cpu: 400m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 400Mi
      serviceAccount: thanos

    compact:
      enabled: true
      dataVolume:
        backend:
          persistentVolumeClaim:
            claimName: thanos-compact-data-volume
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            release: kube-prometheus-stack
      resources:
        limits:
          cpu: 300m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 200Mi
      serviceAccount: thanos

    bucket:
      enabled: true
      http:
        ingress:
          enabled: false
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            release: kube-prometheus-stack
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 300Mi
      serviceAccount: thanos

    rule:
      enabled: false
      serviceAccount: thanos

    sidecar:
      enable: true
      serviceAccount: thanos
      metrics:
        serviceMonitor:
          enabled: true
